export class UserRolePermissionModel {
    showDashBoard: boolean;
    createUsers: boolean;
    amendUserAccess: boolean;
    viewContractDetailPage: boolean;
    sendInternalWorkflow: boolean;
    sendExternalWorkflow: boolean;
    workflowAction: boolean;
    setUpOrEditAlerts: boolean;
    editTapCodes: boolean;
    editContcatOrChInfo: boolean;
    runReports: boolean;
    searchAndViewHistory: boolean;
    creatAndEditCustomisableCountries: boolean;
    uploadSupportingDocuments: boolean;
    downloadSupportingDocuments: boolean;
    editTAPInstructionSheet: boolean;
    sendTapFiletoDCH: boolean;
    allocateCommitments: boolean;
    sendForSignature: boolean;
    createFirstDraft: boolean;
    downloadContract: boolean;
    uploadContract: boolean;
    editviaOnlineEditor: boolean;
    viewDocument: boolean;
    viewTags: boolean;
    editTags: boolean;
    sendForSign: boolean;
    authForSign: boolean;
    addNewGroups: boolean;
    addNewOperators: boolean;
    addNewUser: boolean;
    editGroups: boolean;
    editOperators: boolean;
    editUsers: boolean;
    editCustomerDB: boolean;
    changeBillingInfo: boolean;
    runCoustomerReports: boolean;
    userLogInInfo: boolean;
    uploadNewTemplates: boolean;
    editTemplates: boolean;
    showDraft: boolean;
    completeWorkflow: boolean;
    viewInboxOutboxPage: boolean;
    counterPartyContacts: boolean;
    region: boolean;
    tapInstruction: boolean;
    aaarReports: boolean;
    releaseTaskLock: boolean;
    dealFast: boolean;
    dealFastNew: boolean;
    dealFastIotDiscAgreement: boolean;
    dealFastNbIotAgreement: boolean;
    dealFastOfflineAgreement: boolean;
    dealFastInbox: boolean;
    dealFastOutbox: boolean;
    dealFastCheckedOutTasks: boolean;
    dealFastDraft: boolean;
    dealFastSearch: boolean;
    tradeFast: boolean;
    tradeFastNewTrade: boolean;
    tradeFastTradeIotAgreement: boolean;
    tradeFastTradeNbIotAgreement: boolean;
    tradeFastDraft: boolean;
    tradeFastArchive: boolean;
    tradeFastBlotter: boolean;
    newRequest: boolean;
    counter: boolean;
    awaitingResponse: boolean;
    tapInstructionTapDashboard: boolean;
    tapInstructionHistoryTap: boolean;
    tapInstructionTapInbox: boolean;
    tapInstructionCreateTap: boolean;
    analytics: boolean;
    reports: boolean;
    reportsContractStatus: boolean;
    masterSetup: boolean;
    masterSetupCustomRegion: boolean;
    masterSetupCreateRegion: boolean;
    masterSetupViewRegion: boolean;
    masterSetupGroups: boolean;
    masterSetupAddGroup: boolean;
    masterSetupViewGroup: boolean;
    masterSetupOperators: boolean;
    masterSetupAddOperators: boolean;
    masterSetupViewOperators: boolean;
    masterSetupUsers: boolean;
    masterSetupAddUsers: boolean;
    masterSetupViewUsers: boolean;
    customSearch: boolean;

    constructor(userRights: any) {
        this.showDashBoard = userRights.showDashBoard;
        this.createUsers = userRights.createUsers;
        this.amendUserAccess = userRights.amendUserAccess;
        this.viewContractDetailPage = userRights.viewContractDetailPage;
        this.sendInternalWorkflow = userRights.sendInternalWorkflow;
        this.sendExternalWorkflow = userRights.sendExternalWorkflow;
        this.workflowAction = userRights.workflowAction;
        this.setUpOrEditAlerts = userRights.setUpOrEditAlerts;
        this.editTapCodes = userRights.editTapCodes;
        this.editContcatOrChInfo = userRights.editContcatOrChInfo;
        this.runReports = userRights.runReports;
        this.searchAndViewHistory = userRights.searchAndViewHistory;
        this.creatAndEditCustomisableCountries = userRights.creatAndEditCustomisableCountries;
        this.uploadSupportingDocuments = userRights.uploadSupportingDocuments;
        this.downloadSupportingDocuments = userRights.downloadSupportingDocuments;
        this.editTAPInstructionSheet = userRights.editTAPInstructionSheet;
        this.sendTapFiletoDCH = userRights.sendTapFiletoDCH;
        this.allocateCommitments = userRights.allocateCommitments;
        this.sendForSignature = userRights.sendForSignature;
        this.createFirstDraft = userRights.createFirstDraft;
        this.downloadContract = userRights.downloadContract;
        this.uploadContract = userRights.uploadContract;
        this.editviaOnlineEditor = userRights.editviaOnlineEditor;
        this.viewDocument = userRights.viewDocument;
        this.viewTags = userRights.viewTags;
        this.editTags = userRights.editTags;
        this.sendForSign = userRights.sendForSign;
        this.authForSign = userRights.authForSign;
        this.addNewGroups = userRights.addNewGroups;
        this.addNewOperators = userRights.addNewOperators;
        this.addNewUser = userRights.addNewUser;
        this.editGroups = userRights.editGroups;
        this.editOperators = userRights.editOperators;
        this.editUsers = userRights.editUsers;
        this.editCustomerDB = userRights.editCustomerDB;
        this.changeBillingInfo = userRights.changeBillingInfo;
        this.runCoustomerReports = userRights.runCoustomerReports;
        this.userLogInInfo = userRights.userLogInInfo;
        this.uploadNewTemplates = userRights.uploadNewTemplates;
        this.editTemplates = userRights.editTemplates;
        this.showDraft = userRights.showDraft;
        this.completeWorkflow = userRights.completeWorkflow;
        this.viewInboxOutboxPage = userRights.viewInboxOutboxPage;
        this.counterPartyContacts = userRights.counterPartyContacts;
        this.region = userRights.region;
        this.tapInstruction = userRights.tapInstruction;
        this.aaarReports = userRights.aaarReports;
        this.releaseTaskLock = userRights.releaseTaskLock;
        this.dealFast = userRights.dealFast;
        this.dealFastNew = userRights.dealFastNew;
        this.dealFastIotDiscAgreement = userRights.dealFastIotDiscAgreement;
        this.dealFastNbIotAgreement = userRights.dealFastNbIotAgreement;
        this.dealFastOfflineAgreement = userRights.dealFastOfflineAgreement;
        this.dealFastInbox = userRights.dealFastInbox;
        this.dealFastOutbox = userRights.dealFastOutbox;
        this.dealFastCheckedOutTasks = userRights.dealFastCheckedOutTasks;
        this.dealFastDraft = userRights.dealFastDraft;
        this.dealFastSearch = userRights.dealFastSearch;
        this.tradeFast = userRights.tradeFast;
        this.tradeFastNewTrade = userRights.tradeFastNewTrade;
        this.tradeFastTradeIotAgreement = userRights.tradeFastTradeIotAgreement;
        this.tradeFastTradeNbIotAgreement = userRights.tradeFastTradeNbIotAgreement;
        this.tradeFastDraft = userRights.tradeFastDraft;
        this.tradeFastArchive = userRights.tradeFastArchive;
        this.tradeFastBlotter = userRights.tradeFastBlotter;
        this.newRequest = userRights.newRequest;
        this.counter = userRights.counter;
        this.awaitingResponse = userRights.awaitingResponse;
        this.tapInstructionTapDashboard = userRights.tapInstructionTapDashboard;
        this.tapInstructionHistoryTap = userRights.tapInstructionHistoryTap;
        this.tapInstructionTapInbox = userRights.tapInstructionTapInbox;
        this.tapInstructionCreateTap = userRights.tapInstructionCreateTap;
        this.analytics = userRights.analytics;
        this.reports = userRights.reports;
        this.reportsContractStatus = userRights.reportsContractStatus;
        this.masterSetup = userRights.masterSetup;
        this.masterSetupCustomRegion = userRights.masterSetupCustomRegion;
        this.masterSetupCreateRegion = userRights.masterSetupCreateRegion;
        this.masterSetupViewRegion = userRights.masterSetupViewRegion;
        this.masterSetupGroups = userRights.masterSetupGroups;
        this.masterSetupAddGroup = userRights.masterSetupAddGroup;
        this.masterSetupViewGroup = userRights.masterSetupViewGroup;
        this.masterSetupOperators = userRights.masterSetupOperators;
        this.masterSetupAddOperators = userRights.masterSetupAddOperators;
        this.masterSetupViewOperators = userRights.masterSetupViewOperators;
        this.masterSetupUsers = userRights.masterSetupUsers;
        this.masterSetupAddUsers = userRights.masterSetupAddUsers;
        this.masterSetupViewUsers = userRights.masterSetupViewUsers;
        this.customSearch = userRights.customSearch;
    }
}


export class UserRolePermissionListModel {
    isRoleActive: boolean;
    menus: any[];
    pages: any[];
    roleCode: string;
    roleDescription: string;
    roleName: string;
    roleNode: string;
    rolePriority: number;
}

export class UserInfoModel {
    firstName: string;
    lastName: string;
    lastLoginDate: string;
    resetPassword: number;
    role: any;
    nodeRef: string;
    mobile: string;
    mobileVerfied: boolean;
    jwtToken: string;
    uuid: string;
    email: string;
    emailVeried: boolean;
    menu: any;
    assignedRoles: any;
    nonTritexUserFileId: string;
}
